name: Build and Distribute to Firebase App Distribution

on:
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build Android Release APK
        run: ./gradlew :androidApp:assembleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: androidApp/build/outputs/apk/release/androidApp-release.apk

  build_ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.3'
      - name: Import Code Signing Certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Build and Export IPA
        run: |
          xcodebuild -project iosApp/iosApp.xcodeproj \
                     -scheme iosApp \
                     -destination 'generic/platform=iOS' \
                     archive \
                     -archivePath build/iosApp.xcarchive \
                     CODE_SIGN_IDENTITY="iPhone Distribution" \
                     DEVELOPMENT_TEAM="${{ secrets.DEVELOPMENT_TEAM_ID }}" && \
          xcodebuild -exportArchive \
                     -archivePath build/iosApp.xcarchive \
                     -exportPath build \
                     -exportOptionsPlist iosApp/ExportOptions.plist
      - name: Upload iOS IPA
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: build/iosApp.ipa

  distribute_to_firebase:
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: android-apk
      - name: Download iOS IPA
        uses: actions/download-artifact@v3
        with:
          name: ios-ipa
      - name: Distribute to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: android-apk/androidApp-release.apk,ios-ipa/iosApp.ipa
